test -s ~/.alias && . ~/.alias || true
test -s ~/.bash_alias && . ~/.bash_alias || true
test -s ~/.function && . ~/.function || true

test -s ~/work/code/env_init && . ~/work/code/env_init || true

ulimit -c unlimited

export JAVA_HOME=/usr

export HADOOP_HOME=/home/devis/hadoop/hadoop-2.7.2
export HBASE_HOME=/home/devis/hadoop/hbase-1.1.4
export HIVE_HOME=/home/devis/hadoop/hive-1.2.1
export MAVEN_HOME=/home/devis/hadoop/apache-maven-3.3.9
export PATH=$PATH:$HADOOP_HOME/bin:$HBASE_HOME/bin:$HIVE_HOME/bin:$MAVEN_HOME/bin
export HADOOP_USER_NAME=hadoop
export PYTHONPATH=/home/devis/git/vnpy

#export https_proxy=https://172.16.1.13:808
#export http_proxy=http://localhost:3128

#python 
export PATH=$PATH:$HOME/.local/bin

export TERM=xterm-256color
export LESS=-R

HISTSIZE=1000
HISTFILESIZE=2000

set -o vi

if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

case "$TERM" in
	xterm-color) color_prompt=yes;;
esac

force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

if [ "$color_prompt" = yes ]; then
	PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
	PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

case "$TERM" in
	xterm*|rxvt*)
		PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
		;;
	*)
		;;
esac

if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	#alias dir='dir --color=auto'
	#alias vdir='vdir --color=auto'

	#alias grep='grep --color=auto'
	#alias fgrep='fgrep --color=auto'
	#alias egrep='egrep --color=auto'
fi


if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

# eval "$(pipenv --completion)"
